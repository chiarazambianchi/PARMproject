---
title: "scatter plots"
format: html
editor: visual
---

## E227 counts analysis scatter plots and individual promoter

The aim of this analysis is to understand the correlation and the activity of the individual promoters.

**libraries loading**

```{r}
library (data.table)
library (R.utils)
library (readr)
library (ggplot2)
library (dplyr)
library(tidyr)
```

**1 step**: reading complete dataset containing counts mapped to feature information.

```{r}
df=fread("whole_dataset.txt.gz")
head (df)
```

## Correlation scatter plots

**2 step**: filtering columns (only B1 and B2 samples, chr information and feature information)

```{r}
B1_columns <- grep("B1", names(df), value = TRUE)
B2_columns <- grep("B2", names(df), value = TRUE)
selected_columns_final <- c('chr', B1_columns, B2_columns, 'FEAT')

correlation_df <- df[, ..selected_columns_final]    

head(correlation_df)
```

**3 step**: stripping only gene name in FEAT column

```{r}
correlation_df<- correlation_df[, gene := tstrsplit(FEAT, "_")[[2]]]
head (correlation_df)
```

**4 step**: correlation plot dmso vs gef B1

```{r}
dmso_gef_B1 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_dmso_B1`, 
                          y = `8136_1_PC9_gef_B1`)) +
  theme_minimal() +
  labs(
    title = "Correlation between DMSO B1 and gef B1 Expression",
    x = "DMSO B1 Expression", 
    y = "gef B1 Expression"
  )

dmso_gef_B1
```

**5 step**: correlation plot dmso vs sch77 B1

```{r}


dmso_sch77_B1 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_dmso_B1`, 
                          y = `8136_1_PC9_sch77_B1`)) +
  theme_minimal() +
  labs(
    title = "Correlation between DMSO B1 and sch77 B1 Expression",
    x = "DMSO B1 Expression", 
    y = "sch77 B1 Expression"
  )

dmso_sch77_B1

```

**6 step**: correlation plot gef vs sch77 B1

```{r}
gef_sch77_B1 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_gef_B1`, 
                          y = `8136_1_PC9_sch77_B1`)) +
  theme_minimal() +
  labs(
    title = "Correlation between gef B1 and sch77 B1 Expression",
    x = "gef B1 Expression", 
    y = "sch77 B1 Expression"
  )

gef_sch77_B1
```

**7 step**: correlation plot dmso vs gef B2

```{r}
dmso_gef_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_dmso_B2`, 
                          y = `8136_1_PC9_gef_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between DMSO B2 and gef B2 Expression",
    x = "DMSO B2 Expression", 
    y = "gef B2 Expression"
  )

dmso_gef_B2
```

**8 step**: correlation plot dmso vs sch77 B2

```{r}
dmso_sch77_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_dmso_B2`, 
                          y = `8136_1_PC9_sch77_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between DMSO B1 and sch77 B2 Expression",
    x = "DMSO B2 Expression", 
    y = "sch77 B2 Expression"
  )

dmso_sch77_B2
```

**9 step**: correlation plot gef vs sch77 B2

```{r}
gef_sch77_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_gef_B2`, 
                          y = `8136_1_PC9_sch77_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between gef B2 and sch77 B2 Expression",
    x = "gef B2 Expression", 
    y = "sch77 B2 Expression"
  )

gef_sch77_B2
```

**10 step**: correlation plot DMSO B1 vs DMSO B2

```{r}
dmso_B1_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_dmso_B1`, 
                          y = `8136_1_PC9_dmso_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between DMSO B1 and DMSO B2 Expression",
    x = "DMSO B1 Expression", 
    y = "DMSO B2 Expression"
  )

dmso_B1_B2
```

**11 step**: correlation plot GEF B1 vs GEF B2

```{r}
gef_B1_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_gef_B1`, 
                          y = `8136_1_PC9_gef_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between GEF B1 and GEF B2 Expression",
    x = "GEF B1 Expression", 
    y = "GEF B2 Expression"
  )

gef_B1_B2
```

**12 step**: correlation plot Sch77 B1 vs Sch77 B2

```{r}
sch77_B1_B2 <- ggplot(data=correlation_df)+
                      geom_point(mapping=aes(x = `8136_1_PC9_sch77_B1`, 
                          y = `8136_1_PC9_sch77_B2`)) +
  theme_minimal() +
  labs(
    title = "Correlation between sch77 B1 and sch77 B2 Expression",
    x = "sch77 B1 Expression", 
    y = "sch77 B2 Expression"
  )

sch77_B1_B2
```

**13 step**: saving plots

```{r}

ggsave("dmso_sch77_B1_correlation.png", dmso_sch77_B1)
ggsave("dmso_gef_B1_correlation.png", dmso_gef_B1)
ggsave("gef_sch77_B1_correlation.png", gef_sch77_B1)
ggsave("dmso_sch77_B2_correlation.png", dmso_sch77_B2)
ggsave("dmso_gef_B2_correlation.png", dmso_gef_B2)
ggsave("gef_sch77_B2_correlation.png", gef_sch77_B2)
ggsave("dmso_B1_B2_correlation.png", dmso_B1_B2)
ggsave("gef_B1_B2_correlation.png", gef_B1_B2)
ggsave("sch77_B1_B2_correlation.png", sch77_B1_B2)
```

## Basal activity of each promoter

**2 step**: filtering columns (only B1 and B2 samples, chr information, start, end position, strand and feature information)

```{r}
B1_columns <- grep("B1", names(df), value = TRUE)
B2_columns <- grep("B2", names(df), value = TRUE)
selected_columns_final <- c('chr', 'start', 'end', 'strand', B1_columns, B2_columns, 'FEAT')

promoter_df  <- df[, ..selected_columns_final]    

head(promoter_df)
```

**3 step**: stripping only gene name in FEAT column

```{r}
promoter_df<- promoter_df[, gene := tstrsplit(FEAT, "_")[[2]]]
head (promoter_df)
```

**4 step**: creating a unique label for fragments merging start+end+strand

```{r}
promoter_df <- promoter_df %>%
  mutate(
    fragment = paste0(chr, ":", start, "-", end)
  )
```

**5 step**: factorising the table according to treatment and promoter

```{r}

promoter_df_long <- promoter_df %>%
  pivot_longer(
    cols = starts_with("8136_1_PC9"),  
    names_to = "condition",
    values_to = "counts"
  )


promoter_df_long$condition <- gsub("8136_1_PC9_", "", promoter_df_long$condition)  
```

**6 step**: plotting bar plots

```{r}
dir.create("gene_plots", showWarnings = FALSE)

genes <- unique(promoter_df_long$gene)

for (g in genes) {
  gene_df <- promoter_df_long %>% filter(gene == g)
  
  p <- ggplot(gene_df, aes(x = fragment, y = counts, fill = condition)) +
    geom_bar(stat = "identity", position = "dodge") +
    facet_wrap(~ condition, scales = "free_y") +
    labs(
      title = paste("Fragment-level Counts -", g),
      x = "Fragment",
      y = "Counts"
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 90, hjust = 1, size = 6)
    )
  
  # Save each plot
  ggsave(filename = paste0("gene_plots/", g, "_fragments_barplot.png"),
         plot = p, width = 10, height = 5)
}


```

**7 step**: saving plots

```{r}
ggsave("promoter_activiry_barplot.png", bar_plots)
```
